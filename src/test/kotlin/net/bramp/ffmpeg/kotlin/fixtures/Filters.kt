package net.bramp.ffmpeg.kotlin.fixtures

import net.bramp.ffmpeg.kotlin.info.Filter
import net.bramp.ffmpeg.kotlin.info.FilterPattern

val filters = listOf(
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "abench",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Benchmark part of a filtergraph.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = true,
    name = "acompressor",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Audio compressor.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "acontrast",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Simple audio dynamic range compression/expansion filter.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "acopy",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Copy the input audio unchanged to the output.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "acue",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Delay filtering to match a cue.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "acrossfade",
    inputPattern = FilterPattern("AA"),
    outputPattern = FilterPattern("A"),
    description = "Cross fade two input audio streams.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = true,
    isCommandSupport = false,
    name = "acrossover",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("N"),
    description = "Split audio into per-bands streams.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = true,
    name = "acrusher",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Reduce audio bit resolution.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = false,
    name = "adeclick",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Remove impulsive noise from input audio.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = false,
    name = "adeclip",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Remove clipping from input audio.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = false,
    name = "adecorrelate",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Apply decorrelation to input audio.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = true,
    name = "adelay",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Delay one or more audio channels.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "adenorm",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Remedy denormals by adding extremely low-level noise.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "aderivative",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Compute derivative of input audio.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "adrc",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Audio Spectral Dynamic Range Controller.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "adynamicequalizer",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Apply Dynamic Equalization of input audio.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = true,
    name = "adynamicsmooth",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Apply Dynamic Smoothing of input audio.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "aecho",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Add echoing to the audio.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "aemphasis",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Audio emphasis.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "aeval",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Filter audio signal according to a specified expression.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = true,
    name = "aexciter",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Enhance high frequency part of audio.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = true,
    name = "afade",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Fade in/out input audio.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "afftdn",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Denoise audio samples using FFT.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = false,
    name = "afftfilt",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Apply arbitrary expressions to samples in frequency domain.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "afir",
    inputPattern = FilterPattern("N"),
    outputPattern = FilterPattern("N"),
    description = "Apply Finite Impulse Response filter with supplied coefficients in additional stream(s).",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "aformat",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Convert the input audio to one of the specified formats.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "afreqshift",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Apply frequency shifting to input audio.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "afwtdn",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Denoise audio stream using Wavelets.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = true,
    name = "agate",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Audio gate.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = true,
    isCommandSupport = false,
    name = "aiir",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("N"),
    description = "Apply Infinite Impulse Response filter with supplied coefficients.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "aintegral",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Compute integral of input audio.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "ainterleave",
    inputPattern = FilterPattern("N"),
    outputPattern = FilterPattern("A"),
    description = "Temporally interleave audio inputs.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "alatency",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Report audio filtering latency.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = true,
    name = "alimiter",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Audio lookahead limiter.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "allpass",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Apply a two-pole all-pass filter.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "aloop",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Loop audio samples.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "amerge",
    inputPattern = FilterPattern("N"),
    outputPattern = FilterPattern("A"),
    description = "Merge two or more audio streams into a single multi-channel stream.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "ametadata",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Manipulate audio frame metadata.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = true,
    name = "amix",
    inputPattern = FilterPattern("N"),
    outputPattern = FilterPattern("A"),
    description = "Audio mixing.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "amultiply",
    inputPattern = FilterPattern("AA"),
    outputPattern = FilterPattern("A"),
    description = "Multiply two audio streams.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "anequalizer",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("N"),
    description = "Apply high-order audio parametric multi band equalizer.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "anlmdn",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Reduce broadband noise from stream using Non-Local Means.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "anlmf",
    inputPattern = FilterPattern("AA"),
    outputPattern = FilterPattern("A"),
    description = "Apply Normalized Least-Mean-Fourth algorithm to first audio stream.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "anlms",
    inputPattern = FilterPattern("AA"),
    outputPattern = FilterPattern("A"),
    description = "Apply Normalized Least-Mean-Squares algorithm to first audio stream.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "anull",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Pass the source unchanged to the output.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "apad",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Pad audio with silence.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = true,
    name = "aperms",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Set permissions for the output audio frame.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "aphaser",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Add a phasing effect to the audio.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "aphaseshift",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Apply phase shifting to input audio.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = false,
    name = "apsnr",
    inputPattern = FilterPattern("AA"),
    outputPattern = FilterPattern("A"),
    description = "Measure Audio Peak Signal-to-Noise Ratio.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "apsyclip",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Audio Psychoacoustic Clipper.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "apulsator",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Audio pulsator.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = true,
    name = "arealtime",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Slow down filtering to match realtime.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "aresample",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Resample audio data.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "areverse",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Reverse an audio clip.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "arls",
    inputPattern = FilterPattern("AA"),
    outputPattern = FilterPattern("A"),
    description = "Apply Recursive Least Squares algorithm to first audio stream.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "arnndn",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Reduce noise from speech using Recurrent Neural Networks.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = false,
    name = "asdr",
    inputPattern = FilterPattern("AA"),
    outputPattern = FilterPattern("A"),
    description = "Measure Audio Signal-to-Distortion Ratio.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "asegment",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("N"),
    description = "Segment audio stream.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "aselect",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("N"),
    description = "Select audio frames to pass in output.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "asendcmd",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Send commands to filters.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = true,
    name = "asetnsamples",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Set the number of samples for each output audio frames.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = true,
    name = "asetpts",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Set PTS for the output audio frame.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "asetrate",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Change the sample rate without altering the data.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "asettb",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Set timebase for the audio output link.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "ashowinfo",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Show textual information for each audio frame.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "asidedata",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Manipulate audio frame side data.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = false,
    name = "asisdr",
    inputPattern = FilterPattern("AA"),
    outputPattern = FilterPattern("A"),
    description = "Measure Audio Scale-Invariant Signal-to-Distortion Ratio.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "asoftclip",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Audio Soft Clipper.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = true,
    isCommandSupport = false,
    name = "aspectralstats",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Show frequency domain statistics about audio frames.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "asplit",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("N"),
    description = "Pass on the audio input to N audio outputs.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = true,
    isCommandSupport = false,
    name = "astats",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Show time domain statistics about audio frames.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = true,
    name = "astreamselect",
    inputPattern = FilterPattern("N"),
    outputPattern = FilterPattern("N"),
    description = "Select audio streams",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "asubboost",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Boost subwoofer frequencies.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "asubcut",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Cut subwoofer frequencies.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "asupercut",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Cut super frequencies.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "asuperpass",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Apply high order Butterworth band-pass filter.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "asuperstop",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Apply high order Butterworth band-stop filter.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = true,
    name = "atempo",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Adjust audio tempo.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "atilt",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Apply spectral tilt to audio.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "atrim",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Pick one continuous section from the input, drop the rest.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "axcorrelate",
    inputPattern = FilterPattern("AA"),
    outputPattern = FilterPattern("A"),
    description = "Cross-correlate two audio streams.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "azmq",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Receive commands through ZMQ and broker them to filters.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "bandpass",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Apply a two-pole Butterworth band-pass filter.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "bandreject",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Apply a two-pole Butterworth band-reject filter.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "bass",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Boost or cut lower frequencies.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "biquad",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Apply a biquad IIR filter with the given coefficients.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "channelmap",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Remap audio channels.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "channelsplit",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("N"),
    description = "Split audio into per-channel streams.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "chorus",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Add a chorus effect to the audio.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "compand",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Compress or expand audio dynamic range.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = true,
    name = "compensationdelay",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Audio Compensation Delay Line.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = true,
    name = "crossfeed",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Apply headphone crossfeed filter.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "crystalizer",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Simple audio noise sharpening filter.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "dcshift",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Apply a DC shift to the audio.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "deesser",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Apply de-essing to the audio.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = true,
    name = "dialoguenhance",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Audio Dialogue Enhancement.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "drmeter",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Measure audio dynamic range.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "dynaudnorm",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Dynamic Audio Normalizer.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "earwax",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Widen the stereo image.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "ebur128",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("N"),
    description = "EBU R128 scanner.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "equalizer",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Apply two-pole peaking equalization (EQ) filter.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = true,
    name = "extrastereo",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Increase difference between stereo audio channels.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = true,
    name = "firequalizer",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Finite Impulse Response Equalizer.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "flanger",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Apply a flanging effect to the audio.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "haas",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Apply Haas Stereo Enhancer.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "hdcd",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Apply High Definition Compatible Digital (HDCD) decoding.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = true,
    isCommandSupport = false,
    name = "headphone",
    inputPattern = FilterPattern("N"),
    outputPattern = FilterPattern("A"),
    description = "Apply headphone binaural spatialization with HRTFs in additional streams.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "highpass",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Apply a high-pass filter with 3dB point frequency.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "highshelf",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Apply a high shelf filter.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "join",
    inputPattern = FilterPattern("N"),
    outputPattern = FilterPattern("A"),
    description = "Join multiple audio streams into multi-channel output.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "loudnorm",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "EBU R128 loudness normalization",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "lowpass",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Apply a low-pass filter with 3dB point frequency.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "lowshelf",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Apply a low shelf filter.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "mcompand",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Multiband Compress or expand audio dynamic range.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "pan",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Remix channels with coefficients (panning).",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "replaygain",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "ReplayGain scanner.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = true,
    name = "rubberband",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Apply time-stretching and pitch-shifting.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = true,
    name = "sidechaincompress",
    inputPattern = FilterPattern("AA"),
    outputPattern = FilterPattern("A"),
    description = "Sidechain compressor.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = true,
    name = "sidechaingate",
    inputPattern = FilterPattern("AA"),
    outputPattern = FilterPattern("A"),
    description = "Audio sidechain gate.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "silencedetect",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Detect silence.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = true,
    name = "silenceremove",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Remove silence.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = true,
    name = "speechnorm",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Speech Normalizer.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = true,
    name = "stereotools",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Apply various stereo tools.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = true,
    name = "stereowiden",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Apply stereo widening effect.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "superequalizer",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Apply 18 band equalization filter.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "surround",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Apply audio surround upmix filter.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "tiltshelf",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Apply a tilt shelf filter.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "treble",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Boost or cut upper frequencies.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "tremolo",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Apply tremolo effect.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "vibrato",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Apply vibrato effect.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = true,
    name = "virtualbass",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Audio Virtual Bass.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = true,
    name = "volume",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Change input volume.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "volumedetect",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Detect audio volume.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "aevalsrc",
    inputPattern = FilterPattern("|"),
    outputPattern = FilterPattern("A"),
    description = "Generate an audio signal generated by an expression.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "afdelaysrc",
    inputPattern = FilterPattern("|"),
    outputPattern = FilterPattern("A"),
    description = "Generate a Fractional delay FIR coefficients.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "afireqsrc",
    inputPattern = FilterPattern("|"),
    outputPattern = FilterPattern("A"),
    description = "Generate a FIR equalizer coefficients audio stream.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "afirsrc",
    inputPattern = FilterPattern("|"),
    outputPattern = FilterPattern("A"),
    description = "Generate a FIR coefficients audio stream.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "anoisesrc",
    inputPattern = FilterPattern("|"),
    outputPattern = FilterPattern("A"),
    description = "Generate a noise audio signal.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "anullsrc",
    inputPattern = FilterPattern("|"),
    outputPattern = FilterPattern("A"),
    description = "Null audio source, return empty audio frames.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "hilbert",
    inputPattern = FilterPattern("|"),
    outputPattern = FilterPattern("A"),
    description = "Generate a Hilbert transform FIR coefficients.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "sinc",
    inputPattern = FilterPattern("|"),
    outputPattern = FilterPattern("A"),
    description = "Generate a sinc kaiser-windowed low-pass, high-pass, band-pass, or band-reject FIR coefficients.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "sine",
    inputPattern = FilterPattern("|"),
    outputPattern = FilterPattern("A"),
    description = "Generate sine wave audio signal.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "anullsink",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("|"),
    description = "Do absolutely nothing with the input audio.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "addroi",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Add region of interest to frame.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "alphaextract",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Extract an alpha channel as a grayscale image component.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "alphamerge",
    inputPattern = FilterPattern("VV"),
    outputPattern = FilterPattern("V"),
    description = "Copy the luma value of the second input into the alpha channel of the first input.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "amplify",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Amplify changes between successive video frames.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "ass",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Render ASS subtitles onto input video using the libass library.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "atadenoise",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Apply an Adaptive Temporal Averaging Denoiser.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = true,
    name = "avgblur",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Apply Average Blur filter.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "backgroundkey",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Turns a static background into transparency.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = true,
    name = "bbox",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Compute bounding box for each frame.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "bench",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Benchmark part of a filtergraph.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "bilateral",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Apply Bilateral filter.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "bitplanenoise",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Measure bit plane noise.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = true,
    isCommandSupport = false,
    name = "blackdetect",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Detect video intervals that are (almost) black.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "blackframe",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Detect frames that are (almost) black.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "blend",
    inputPattern = FilterPattern("VV"),
    outputPattern = FilterPattern("V"),
    description = "Blend two video frames into each other.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "blockdetect",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Blockdetect filter.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "blurdetect",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Blurdetect filter.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = false,
    name = "bm3d",
    inputPattern = FilterPattern("N"),
    outputPattern = FilterPattern("V"),
    description = "Block-Matching 3D denoiser.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "boxblur",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Blur the input.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = false,
    name = "bwdif",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Deinterlace the input image.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "cas",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Contrast Adaptive Sharpen.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "ccrepack",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Repack CEA-708 closed caption metadata",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "chromahold",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Turns a certain color range into gray.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "chromakey",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Turns a certain color into transparency. Operates on YUV colors.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "chromanr",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Reduce chrominance noise.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "chromashift",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Shift chroma.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "ciescope",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Video CIE scope.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "codecview",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Visualize information about some codecs.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "colorbalance",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Adjust the color balance.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "colorchannelmixer",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Adjust colors by mixing color channels.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "colorcontrast",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Adjust color contrast between RGB components.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "colorcorrect",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Adjust color white balance selectively for blacks and whites.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "colorize",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Overlay a solid color on the video stream.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "colorkey",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Turns a certain color into transparency. Operates on RGB colors.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "colorhold",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Turns a certain color range into gray. Operates on RGB colors.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "colorlevels",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Adjust the color levels.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "colormap",
    inputPattern = FilterPattern("VVV"),
    outputPattern = FilterPattern("V"),
    description = "Apply custom Color Maps to video stream.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = false,
    name = "colormatrix",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Convert color matrix.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = false,
    name = "colorspace",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Convert between colorspaces.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "colortemperature",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Adjust color temperature of video.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "convolution",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Apply convolution filter.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = false,
    name = "convolve",
    inputPattern = FilterPattern("VV"),
    outputPattern = FilterPattern("V"),
    description = "Convolve first video stream with second video stream.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "copy",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Copy the input video unchanged to the output.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "coreimage",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Video filtering using CoreImage API.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "corr",
    inputPattern = FilterPattern("VV"),
    outputPattern = FilterPattern("V"),
    description = "Calculate the correlation between two video streams.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "cover_rect",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Find and cover a user specified object.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = true,
    name = "crop",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Crop the input video.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = true,
    name = "cropdetect",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Auto-detect crop size.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "cue",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Delay filtering to match a cue.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "curves",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Adjust components curves.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "datascope",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Video data analysis.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = true,
    name = "dblur",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Apply Directional Blur filter.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = false,
    name = "dctdnoiz",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Denoise frames using 2D DCT.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "deband",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Debands video.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = true,
    name = "deblock",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Deblock video.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "decimate",
    inputPattern = FilterPattern("N"),
    outputPattern = FilterPattern("V"),
    description = "Decimate frames (post field matching filter).",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = false,
    name = "deconvolve",
    inputPattern = FilterPattern("VV"),
    outputPattern = FilterPattern("V"),
    description = "Deconvolve first video stream with second video stream.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = false,
    name = "dedot",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Reduce cross-luminance and cross-color.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "deflate",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Apply deflate effect.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "deflicker",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Remove temporal frame luminance variations.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "dejudder",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Remove judder produced by pullup.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "delogo",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Remove logo from input video.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "derain",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Apply derain filter to the input.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "deshake",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Stabilize shaky video.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "despill",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Despill video.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "detelecine",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Apply an inverse telecine pattern.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "dilation",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Apply dilation effect.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "displace",
    inputPattern = FilterPattern("VVV"),
    outputPattern = FilterPattern("V"),
    description = "Displace pixels.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "dnn_classify",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Apply DNN classify filter to the input.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "dnn_detect",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Apply DNN detect filter to the input.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "dnn_processing",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Apply DNN processing filter to the input.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = true,
    isCommandSupport = false,
    name = "doubleweave",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Weave input video fields into double number of frames.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = true,
    name = "drawbox",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Draw a colored box on the input video.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "drawgraph",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Draw a graph using input video metadata.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = true,
    name = "drawgrid",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Draw a colored grid on the input video.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = true,
    name = "drawtext",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Draw text on top of video frames using libfreetype library.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "edgedetect",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Detect and draw edge.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "elbg",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Apply posterize effect, using the ELBG algorithm.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "entropy",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Measure video frames entropy.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = true,
    isCommandSupport = false,
    name = "epx",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Scale the input using EPX algorithm.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = true,
    name = "eq",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Adjust brightness, contrast, gamma, and saturation.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "erosion",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Apply erosion effect.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "estdif",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Apply Edge Slope Tracing deinterlace.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "exposure",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Adjust exposure of the video stream.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "extractplanes",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("N"),
    description = "Extract planes as grayscale frames.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = false,
    name = "fade",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Fade in/out input video.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = true,
    name = "feedback",
    inputPattern = FilterPattern("VV"),
    outputPattern = FilterPattern("VV"),
    description = "Apply feedback video filter.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "fftdnoiz",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Denoise frames using 3D FFT.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = false,
    name = "fftfilt",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Apply arbitrary expressions to pixels in frequency domain.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "field",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Extract a field from the input video.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "fieldhint",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Field matching using hints.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "fieldmatch",
    inputPattern = FilterPattern("N"),
    outputPattern = FilterPattern("V"),
    description = "Field matching for inverse telecine.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "fieldorder",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Set the field order.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = true,
    name = "fillborders",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Fill borders of the input video.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "find_rect",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Find a user specified object.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "floodfill",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Fill area with same color with another color.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "format",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Convert the input video to one of the specified pixel formats.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "fps",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Force constant framerate.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "framepack",
    inputPattern = FilterPattern("VV"),
    outputPattern = FilterPattern("V"),
    description = "Generate a frame packed stereoscopic video.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = true,
    isCommandSupport = false,
    name = "framerate",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Upsamples or downsamples progressive source between specified frame rates.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "framestep",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Select one frame every N frames.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "freezedetect",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Detects frozen video input.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "freezeframes",
    inputPattern = FilterPattern("VV"),
    outputPattern = FilterPattern("V"),
    description = "Freeze video frames.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = true,
    name = "frei0r",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Apply a frei0r effect.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "fspp",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Apply Fast Simple Post-processing filter.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "gblur",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Apply Gaussian Blur filter.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = false,
    name = "geq",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Apply generic equation to each pixel.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "gradfun",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Debands video quickly using gradients.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = true,
    name = "graphmonitor",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Show various filtergraph stats.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = false,
    name = "grayworld",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Adjust white balance using LAB gray world algorithm",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = false,
    name = "greyedge",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Estimates scene illumination by grey edge assumption.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "guided",
    inputPattern = FilterPattern("N"),
    outputPattern = FilterPattern("V"),
    description = "Apply Guided filter.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "haldclut",
    inputPattern = FilterPattern("VV"),
    outputPattern = FilterPattern("V"),
    description = "Adjust colors using a Hald CLUT.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = false,
    name = "hflip",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Horizontally flip the input video.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "histeq",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Apply global color histogram equalization.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "histogram",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Compute and draw a histogram.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "hqdn3d",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Apply a High Quality 3D Denoiser.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = true,
    isCommandSupport = false,
    name = "hqx",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Scale the input by 2, 3 or 4 using the hq*x magnification algorithm.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = true,
    isCommandSupport = false,
    name = "hstack",
    inputPattern = FilterPattern("N"),
    outputPattern = FilterPattern("V"),
    description = "Stack video inputs horizontally.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "hsvhold",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Turns a certain HSV range into gray.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "hsvkey",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Turns a certain HSV range into transparency. Operates on YUV colors.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = true,
    name = "hue",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Adjust the hue and saturation of the input video.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "huesaturation",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Apply hue-saturation-intensity adjustments.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "hwdownload",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Download a hardware frame to a normal frame",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "hwmap",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Map hardware frames",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "hwupload",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Upload a normal frame to a hardware frame",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "hysteresis",
    inputPattern = FilterPattern("VV"),
    outputPattern = FilterPattern("V"),
    description = "Grow first stream into second stream by connecting components.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = false,
    name = "identity",
    inputPattern = FilterPattern("VV"),
    outputPattern = FilterPattern("V"),
    description = "Calculate the Identity between two video streams.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "idet",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Interlace detect Filter.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = true,
    name = "il",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Deinterleave or interleave fields.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "inflate",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Apply inflate effect.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "interlace",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Convert progressive video into interlaced.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "interleave",
    inputPattern = FilterPattern("N"),
    outputPattern = FilterPattern("V"),
    description = "Temporally interleave video inputs.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "kerndeint",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Apply kernel deinterlacing to the input.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "kirsch",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Apply kirsch operator.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "lagfun",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Slowly update darker pixels.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "latency",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Report video filtering latency.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "lenscorrection",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Rectify the image by correcting for lens distortion.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "libvmaf",
    inputPattern = FilterPattern("VV"),
    outputPattern = FilterPattern("V"),
    description = "Calculate the VMAF between two video streams.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "limitdiff",
    inputPattern = FilterPattern("N"),
    outputPattern = FilterPattern("V"),
    description = "Apply filtering with limiting difference.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "limiter",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Limit pixels components to the specified range.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "loop",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Loop video frames.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "lumakey",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Turns a certain luma into transparency.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "lut",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Compute and apply a lookup table to the RGB/YUV input video.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "lut1d",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Adjust colors using a 1D LUT.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "lut2",
    inputPattern = FilterPattern("VV"),
    outputPattern = FilterPattern("V"),
    description = "Compute and apply a lookup table from two video inputs.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "lut3d",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Adjust colors using a 3D LUT.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "lutrgb",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Compute and apply a lookup table to the RGB input video.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "lutyuv",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Compute and apply a lookup table to the YUV input video.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "maskedclamp",
    inputPattern = FilterPattern("VVV"),
    outputPattern = FilterPattern("V"),
    description = "Clamp first stream with second stream and third stream.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "maskedmax",
    inputPattern = FilterPattern("VVV"),
    outputPattern = FilterPattern("V"),
    description = "Apply filtering with maximum difference of two streams.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "maskedmerge",
    inputPattern = FilterPattern("VVV"),
    outputPattern = FilterPattern("V"),
    description = "Merge first stream with second stream using third stream as mask.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "maskedmin",
    inputPattern = FilterPattern("VVV"),
    outputPattern = FilterPattern("V"),
    description = "Apply filtering with minimum difference of two streams.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "maskedthreshold",
    inputPattern = FilterPattern("VV"),
    outputPattern = FilterPattern("V"),
    description = "Pick pixels comparing absolute difference of two streams with threshold.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "maskfun",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Create Mask.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "mcdeint",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Apply motion compensating deinterlacing.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "median",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Apply Median filter.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "mergeplanes",
    inputPattern = FilterPattern("N"),
    outputPattern = FilterPattern("V"),
    description = "Merge planes.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "mestimate",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Generate motion vectors.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "metadata",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Manipulate video frame metadata.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "midequalizer",
    inputPattern = FilterPattern("VV"),
    outputPattern = FilterPattern("V"),
    description = "Apply Midway Equalization.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "minterpolate",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Frame rate conversion using Motion Interpolation.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "mix",
    inputPattern = FilterPattern("N"),
    outputPattern = FilterPattern("V"),
    description = "Mix video inputs.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "monochrome",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Convert video to gray using custom color filter.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "morpho",
    inputPattern = FilterPattern("VV"),
    outputPattern = FilterPattern("V"),
    description = "Apply Morphological filter.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "mpdecimate",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Remove near-duplicate frames.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = false,
    name = "msad",
    inputPattern = FilterPattern("VV"),
    outputPattern = FilterPattern("V"),
    description = "Calculate the MSAD between two video streams.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "multiply",
    inputPattern = FilterPattern("VV"),
    outputPattern = FilterPattern("V"),
    description = "Multiply first video stream with second video stream.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "negate",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Negate input video.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = false,
    name = "nlmeans",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Non-local means denoiser.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "nnedi",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Apply neural network edge directed interpolation intra-only deinterlacer.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "noformat",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Force libavfilter not to use any of the specified pixel formats for the input to the next filter.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = false,
    name = "noise",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Add noise.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = true,
    name = "normalize",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Normalize RGB video.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "null",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Pass the source unchanged to the output.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "ocr",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Optical Character Recognition.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = true,
    name = "oscilloscope",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "2D Video Oscilloscope.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "overlay",
    inputPattern = FilterPattern("VV"),
    outputPattern = FilterPattern("V"),
    description = "Overlay a video source on top of the input.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "owdenoise",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Denoise using wavelets.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "pad",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Pad the input video.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "palettegen",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Find the optimal palette for a given stream.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "paletteuse",
    inputPattern = FilterPattern("VV"),
    outputPattern = FilterPattern("V"),
    description = "Use a palette to downsample an input video stream.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = true,
    name = "perms",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Set permissions for the output video frame.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = false,
    name = "perspective",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Correct the perspective of video.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = true,
    name = "phase",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Phase shift fields.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "photosensitivity",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Filter out photosensitive epilepsy seizure-inducing flashes.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "pixdesctest",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Test pixel format definitions.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "pixelize",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Pixelize video.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = true,
    name = "pixscope",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Pixel data analysis.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = true,
    name = "pp",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Filter video using libpostproc.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "pp7",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Apply Postprocessing 7 filter.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = false,
    name = "premultiply",
    inputPattern = FilterPattern("N"),
    outputPattern = FilterPattern("V"),
    description = "PreMultiply first stream with first plane of second stream.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "prewitt",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Apply prewitt operator.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "pseudocolor",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Make pseudocolored video frames.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = false,
    name = "psnr",
    inputPattern = FilterPattern("VV"),
    outputPattern = FilterPattern("V"),
    description = "Calculate the PSNR between two video streams.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "pullup",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Pullup from field sequence to frames.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "qp",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Change video quantization parameters.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "random",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Return random frames.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "readeia608",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Read EIA-608 Closed Caption codes from input video and write them to frame metadata.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "readvitc",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Read vertical interval timecode and write it to frame metadata.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = true,
    name = "realtime",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Slow down filtering to match realtime.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = true,
    isCommandSupport = false,
    name = "remap",
    inputPattern = FilterPattern("VVV"),
    outputPattern = FilterPattern("V"),
    description = "Remap pixels.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = false,
    name = "removegrain",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Remove grain.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "removelogo",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Remove a TV logo based on a mask image.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "repeatfields",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Hard repeat fields based on MPEG repeat field flag.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "reverse",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Reverse a clip.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "rgbashift",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Shift RGBA.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "roberts",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Apply roberts cross operator.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "rotate",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Rotate the input image.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "sab",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Apply shape adaptive blur.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = true,
    name = "scale",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Scale the input video size and/or convert the image format.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "scale_vt",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Scale Videotoolbox frames",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = true,
    name = "scale2ref",
    inputPattern = FilterPattern("VV"),
    outputPattern = FilterPattern("VV"),
    description = "Scale the input video size and/or convert the image format to the given reference.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "scdet",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Detect video scene change",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "scharr",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Apply scharr operator.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "scroll",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Scroll input video.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "segment",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("N"),
    description = "Segment video stream.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "select",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("N"),
    description = "Select video frames to pass in output.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = false,
    name = "selectivecolor",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Apply CMYK adjustments to specific color ranges.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "sendcmd",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Send commands to filters.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "separatefields",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Split input video frames into fields.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "setdar",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Set the frame display aspect ratio.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "setfield",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Force field for the output video frame.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "setparams",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Force field, or color property for the output video frame.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = true,
    name = "setpts",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Set PTS for the output video frame.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "setrange",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Force color range for the output video frame.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "setsar",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Set the pixel sample aspect ratio.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "settb",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Set timebase for the video output link.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "shear",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Shear transform the input image.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "showinfo",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Show textual information for each video frame.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "showpalette",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Display frame palette.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "shuffleframes",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Shuffle video frames.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = false,
    name = "shufflepixels",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Shuffle video pixels.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "shuffleplanes",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Shuffle video planes.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "sidedata",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Manipulate video frame side data.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = true,
    isCommandSupport = false,
    name = "signalstats",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Generate statistics from video analysis.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "signature",
    inputPattern = FilterPattern("N"),
    outputPattern = FilterPattern("V"),
    description = "Calculate the MPEG-7 video signature",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "siti",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Calculate spatial information (SI) and temporal information (TI).",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "smartblur",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Blur the input video without impacting the outlines.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "sobel",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Apply sobel operator.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "split",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("N"),
    description = "Pass on the input to N video outputs.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = true,
    name = "spp",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Apply a simple post processing filter.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "sr",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Apply DNN-based image super resolution to the input.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = false,
    name = "ssim",
    inputPattern = FilterPattern("VV"),
    outputPattern = FilterPattern("V"),
    description = "Calculate the SSIM between two video streams.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "ssim360",
    inputPattern = FilterPattern("VV"),
    outputPattern = FilterPattern("V"),
    description = "Calculate the SSIM between two 360 video streams.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = true,
    isCommandSupport = false,
    name = "stereo3d",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Convert video stereoscopic 3D view.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = true,
    name = "streamselect",
    inputPattern = FilterPattern("N"),
    outputPattern = FilterPattern("N"),
    description = "Select video streams",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "subtitles",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Render text subtitles onto input video using the libass library.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = true,
    isCommandSupport = false,
    name = "super2xsai",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Scale the input by 2x using the Super2xSaI pixel art algorithm.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = true,
    name = "swaprect",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Swap 2 rectangular objects in video.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "swapuv",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Swap U and V components.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "tblend",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Blend successive frames.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "telecine",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Apply a telecine pattern.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "thistogram",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Compute and draw a temporal histogram.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "threshold",
    inputPattern = FilterPattern("VVVV"),
    outputPattern = FilterPattern("V"),
    description = "Threshold first video stream using other video streams.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = false,
    name = "thumbnail",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Select the most representative frame in a given sequence of consecutive frames.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "tile",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Tile several successive frames together.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "tinterlace",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Perform temporal field interlacing.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "tlut2",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Compute and apply a lookup table from two successive frames.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "tmedian",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Pick median pixels from successive frames.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "tmidequalizer",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Apply Temporal Midway Equalization.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "tmix",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Mix successive video frames.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = true,
    isCommandSupport = false,
    name = "tonemap",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Conversion to/from different dynamic ranges.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "tpad",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Temporarily pad video frames.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = true,
    isCommandSupport = false,
    name = "transpose",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Transpose input video.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "transpose_vt",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Transpose Videotoolbox frames",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "trim",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Pick one continuous section from the input, drop the rest.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = false,
    name = "unpremultiply",
    inputPattern = FilterPattern("N"),
    outputPattern = FilterPattern("V"),
    description = "UnPreMultiply first stream with first plane of second stream.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = false,
    name = "unsharp",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Sharpen or blur the input video.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "untile",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Untile a frame into a sequence of frames.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = false,
    name = "uspp",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Apply Ultra Simple / Slow Post-processing filter.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "v360",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Convert 360 projection of video.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "vaguedenoiser",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Apply a Wavelet based Denoiser.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "varblur",
    inputPattern = FilterPattern("VV"),
    outputPattern = FilterPattern("V"),
    description = "Apply Variable Blur filter.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = true,
    name = "vectorscope",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Video vectorscope.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "vflip",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Flip the input video vertically.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "vfrdet",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Variable frame rate detect filter.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "vibrance",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Boost or alter saturation.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "vidstabdetect",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Extract relative transformations, pass 1 of 2 for stabilization (see vidstabtransform for pass 2).",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "vidstabtransform",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Transform the frames, pass 2 of 2 for stabilization (see vidstabdetect for pass 1).",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = false,
    name = "vif",
    inputPattern = FilterPattern("VV"),
    outputPattern = FilterPattern("V"),
    description = "Calculate the VIF between two video streams.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "vignette",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Make or reverse a vignette effect.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "vmafmotion",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Calculate the VMAF Motion score.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = true,
    isCommandSupport = false,
    name = "vstack",
    inputPattern = FilterPattern("N"),
    outputPattern = FilterPattern("V"),
    description = "Stack video inputs vertically.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "w3fdif",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Apply Martin Weston three field deinterlace.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "waveform",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Video waveform monitor.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = true,
    isCommandSupport = false,
    name = "weave",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Weave input video fields into frames.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = true,
    isCommandSupport = false,
    name = "xbr",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Scale the input using xBR algorithm.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = false,
    name = "xcorrelate",
    inputPattern = FilterPattern("VV"),
    outputPattern = FilterPattern("V"),
    description = "Cross-correlate first video stream with second video stream.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = true,
    isCommandSupport = false,
    name = "xfade",
    inputPattern = FilterPattern("VV"),
    outputPattern = FilterPattern("V"),
    description = "Cross fade one video with another video.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "xmedian",
    inputPattern = FilterPattern("N"),
    outputPattern = FilterPattern("V"),
    description = "Pick median pixels from several video inputs.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = true,
    isCommandSupport = false,
    name = "xstack",
    inputPattern = FilterPattern("N"),
    outputPattern = FilterPattern("V"),
    description = "Stack video inputs into custom layout.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = false,
    name = "yadif",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Deinterlace the input image.",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "yadif_videotoolbox",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "YADIF for VideoToolbox frames using Metal compute",
  ),
  Filter(
    isTimelineSupported = true,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "yaepblur",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Yet another edge preserving blur filter.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "zmq",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Receive commands through ZMQ and broker them to filters.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "zoompan",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Apply Zoom & Pan effect.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "zscale",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Apply resizing, colorspace and bit depth conversion.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "allrgb",
    inputPattern = FilterPattern("|"),
    outputPattern = FilterPattern("V"),
    description = "Generate all RGB colors.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "allyuv",
    inputPattern = FilterPattern("|"),
    outputPattern = FilterPattern("V"),
    description = "Generate all yuv colors.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "cellauto",
    inputPattern = FilterPattern("|"),
    outputPattern = FilterPattern("V"),
    description = "Create pattern generated by an elementary cellular automaton.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = true,
    name = "color",
    inputPattern = FilterPattern("|"),
    outputPattern = FilterPattern("V"),
    description = "Provide an uniformly colored input.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "colorchart",
    inputPattern = FilterPattern("|"),
    outputPattern = FilterPattern("V"),
    description = "Generate color checker chart.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "colorspectrum",
    inputPattern = FilterPattern("|"),
    outputPattern = FilterPattern("V"),
    description = "Generate colors spectrum.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "coreimagesrc",
    inputPattern = FilterPattern("|"),
    outputPattern = FilterPattern("V"),
    description = "Video source using image generators of CoreImage API.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "frei0r_src",
    inputPattern = FilterPattern("|"),
    outputPattern = FilterPattern("V"),
    description = "Generate a frei0r source.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = true,
    isCommandSupport = false,
    name = "gradients",
    inputPattern = FilterPattern("|"),
    outputPattern = FilterPattern("V"),
    description = "Draw a gradients.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "haldclutsrc",
    inputPattern = FilterPattern("|"),
    outputPattern = FilterPattern("V"),
    description = "Provide an identity Hald CLUT.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "life",
    inputPattern = FilterPattern("|"),
    outputPattern = FilterPattern("V"),
    description = "Create life.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "mandelbrot",
    inputPattern = FilterPattern("|"),
    outputPattern = FilterPattern("V"),
    description = "Render a Mandelbrot fractal.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "mptestsrc",
    inputPattern = FilterPattern("|"),
    outputPattern = FilterPattern("V"),
    description = "Generate various test pattern.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "nullsrc",
    inputPattern = FilterPattern("|"),
    outputPattern = FilterPattern("V"),
    description = "Null video source, return unprocessed video frames.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "pal75bars",
    inputPattern = FilterPattern("|"),
    outputPattern = FilterPattern("V"),
    description = "Generate PAL 75% color bars.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "pal100bars",
    inputPattern = FilterPattern("|"),
    outputPattern = FilterPattern("V"),
    description = "Generate PAL 100% color bars.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "rgbtestsrc",
    inputPattern = FilterPattern("|"),
    outputPattern = FilterPattern("V"),
    description = "Generate RGB test pattern.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = true,
    isCommandSupport = false,
    name = "sierpinski",
    inputPattern = FilterPattern("|"),
    outputPattern = FilterPattern("V"),
    description = "Render a Sierpinski fractal.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "smptebars",
    inputPattern = FilterPattern("|"),
    outputPattern = FilterPattern("V"),
    description = "Generate SMPTE color bars.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "smptehdbars",
    inputPattern = FilterPattern("|"),
    outputPattern = FilterPattern("V"),
    description = "Generate SMPTE HD color bars.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "testsrc",
    inputPattern = FilterPattern("|"),
    outputPattern = FilterPattern("V"),
    description = "Generate test pattern.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "testsrc2",
    inputPattern = FilterPattern("|"),
    outputPattern = FilterPattern("V"),
    description = "Generate another test pattern.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "yuvtestsrc",
    inputPattern = FilterPattern("|"),
    outputPattern = FilterPattern("V"),
    description = "Generate YUV test pattern.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "zoneplate",
    inputPattern = FilterPattern("|"),
    outputPattern = FilterPattern("V"),
    description = "Generate zone-plate.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "nullsink",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("|"),
    description = "Do absolutely nothing with the input video.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = true,
    name = "a3dscope",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("V"),
    description = "Convert input audio to 3d scope video output.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "abitscope",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("V"),
    description = "Convert input audio to audio bit scope video output.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "adrawgraph",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("V"),
    description = "Draw a graph using input audio metadata.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = true,
    name = "agraphmonitor",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("V"),
    description = "Show various filtergraph stats.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "ahistogram",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("V"),
    description = "Convert input audio to histogram video output.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "aphasemeter",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("N"),
    description = "Convert input audio to phase meter video output.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = true,
    isCommandSupport = true,
    name = "avectorscope",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("V"),
    description = "Convert input audio to vectorscope video output.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = true,
    name = "concat",
    inputPattern = FilterPattern("N"),
    outputPattern = FilterPattern("N"),
    description = "Concatenate audio and video streams.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "showcqt",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("V"),
    description = "Convert input audio to a CQT (Constant/Clamped Q Transform) spectrum video output.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = true,
    isCommandSupport = false,
    name = "showcwt",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("V"),
    description = "Convert input audio to a CWT (Continuous Wavelet Transform) spectrum video output.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "showfreqs",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("V"),
    description = "Convert input audio to a frequencies video output.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = true,
    isCommandSupport = false,
    name = "showspatial",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("V"),
    description = "Convert input audio to a spatial video output.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = true,
    isCommandSupport = false,
    name = "showspectrum",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("V"),
    description = "Convert input audio to a spectrum video output.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = true,
    isCommandSupport = false,
    name = "showspectrumpic",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("V"),
    description = "Convert input audio to a spectrum video output single picture.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "showvolume",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("V"),
    description = "Convert input audio volume to video output.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "showwaves",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("V"),
    description = "Convert input audio to a video output.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "showwavespic",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("V"),
    description = "Convert input audio to a video output single picture.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "spectrumsynth",
    inputPattern = FilterPattern("VV"),
    outputPattern = FilterPattern("A"),
    description = "Convert input spectrum videos to audio output.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = true,
    name = "avsynctest",
    inputPattern = FilterPattern("|"),
    outputPattern = FilterPattern("AV"),
    description = "Generate an Audio Video Sync Test.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = true,
    name = "amovie",
    inputPattern = FilterPattern("|"),
    outputPattern = FilterPattern("N"),
    description = "Read audio from a movie source.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = true,
    name = "movie",
    inputPattern = FilterPattern("|"),
    outputPattern = FilterPattern("N"),
    description = "Read from a movie source.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "afifo",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("A"),
    description = "Buffer input frames and send them when they are requested.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "fifo",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("V"),
    description = "Buffer input images and send them when they are requested.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "abuffer",
    inputPattern = FilterPattern("|"),
    outputPattern = FilterPattern("A"),
    description = "Buffer audio frames, and make them accessible to the filterchain.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "buffer",
    inputPattern = FilterPattern("|"),
    outputPattern = FilterPattern("V"),
    description = "Buffer video frames, and make them accessible to the filterchain.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "abuffersink",
    inputPattern = FilterPattern("A"),
    outputPattern = FilterPattern("|"),
    description = "Buffer audio frames, and make them available to the end of the filter graph.",
  ),
  Filter(
    isTimelineSupported = false,
    isSliceThreading = false,
    isCommandSupport = false,
    name = "buffersink",
    inputPattern = FilterPattern("V"),
    outputPattern = FilterPattern("|"),
    description = "Buffer video frames, and make them available to the end of the filter graph.",
  ),
)
